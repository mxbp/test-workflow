---
name: Test workflow
on:
  push:
    branches:
      - develop
      - release/**
      - hotfix/**
  pull_request:
    branches:
      - develop
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment for deploy'
        required: false
        type: choice
        options:
          - sandbox
          - develop
          - quality_assurance
          - user_acceptance_testing 
          - production
jobs:
  check_environment:
    name: Check Environment
    runs-on: ubuntu-latest
    outputs:
      description: ${{ steps.description.outputs.description }}
      environment: ${{ steps.environment.outputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get environment
        id: environment
        run: |
          # Manual trigger
          if [[ "${{ inputs.environment }}" != "" ]]; then
            echo "environment=${{ inputs.environment }} 👌"
            # For SANDBOX environment can use branch are main/master, release/hotfix, develop and feature/bugfix
            if [[ "${{ inputs.environment }}" == "sandbox" &&
                   ("${{ github.ref_name }}" == "feature/"* || "${{ github.ref_name }}" == "bugfix/"* ||
                    "${{ github.ref_name }}" == "develop" ||
                    "${{ github.ref_name }}" == "release/"* || "${{ github.ref_name }}" == "hotfix/"* ||
                    "${{ github.ref_name }}" == "main" || "${{ github.ref_name }}" == "master") ]]; then
              echo "environment=${{ inputs.environment }}, branch=${{ github.ref_name }} SANDBOX 👍"
              echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT
            # For DEVELOP environment can use branch are main/master, release/hotfix and develop
            elif [[ "${{ inputs.environment }}" == "develop" &&
                   ("${{ github.ref_name }}" == "develop" ||
                    "${{ github.ref_name }}" == "release/"* || "${{ github.ref_name }}" == "hotfix/"* ||
                    "${{ github.ref_name }}" == "main" || "${{ github.ref_name }}" == "master") ]]; then
              echo "environment=${{ inputs.environment }}, branch=${{ github.ref_name }} DEVELOP 👍"
              echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT
            # For QA and UAT environments can use branch are main/master and release/hotfix
            elif [[ ("${{ inputs.environment }}" == "quality_assurance" || "${{ inputs.environment }}" == "user_acceptance_testing") &&
                    ("${{ github.ref_name }}" == "release"* || "${{ github.ref_name }}" == "hotfix"* ||
                     "${{ github.ref_name }}" == "main" || "${{ github.ref_name }}" == "master") ]]; then
              echo "environment=${{ inputs.environment }}, branch=${{ github.ref_name }} QA/UAT 👍"
              echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT
            # For PROD environment can use branch are main/master
            elif [[ "${{ inputs.environment }}" == "production" &&
                   ("${{ github.ref_name }}" == "main" || "${{ github.ref_name }}" == "master") ]]; then
              echo "environment=${{ inputs.environment }}, branch=${{ github.ref_name }} PROD 👍"
              echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT
            # Exit if incorrect condition
            else
              echo "environment=${{ inputs.environment }} INCORRECT for branch ${{ github.ref_name }} 👎"
              exit 1
            fi
          # Automated trigger
          elif [[ "${{ github.ref_name }}" == "develop" ]]; then
            echo "environment=develop" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == "release"* || "${{ github.ref_name }}" == "hotfix"* ]]; then
            echo "environment=quality_assurance" >> $GITHUB_OUTPUT
          else
            echo "INCORRECT for branch ${{ github.ref_name }} 👎"
            exit 1
          fi
      - name: Get description
        id: description
        run: |
          echo "description=$(curl -s -H 'Authorization: token ${{ github.token }}' \
            'https://api.github.com/repos/${{ github.repository }}' | jq -r '.description')" >> "$GITHUB_OUTPUT"
      - name: Debug Info
        run: |
          echo "github.head_ref    - ${{ github.head_ref }}"
          echo "github.base_ref    - ${{ github.base_ref }}"
          echo "github.ref_name    - ${{ github.ref_name }}"
          echo "github.run_number  - ${{ github.run_number }}"
          echo "github.run_attempt - ${{ github.run_attempt }}"
          echo "description        - ${{ steps.description.outputs.description }}"
          echo "environment        - ${{ steps.environment.outputs.environment }}"
  use_environment:
    name: Use Environment
    runs-on: ubuntu-latest
    needs: check_environment
    environment: ${{ needs.check_environment.outputs.environment }}
    steps:
      - name: Debug Info
        run: |
          echo "description        - ${{ needs.check_environment.outputs.description }}"
          echo "stage              - ${{ vars.STAGE }}"
